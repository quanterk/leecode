class Solution {
public:
    vector<vector<int>> generateMatrix(int n) 
    {
        vector<vector<int>> m(n, vector<int>(n));
        if(n<1) return m;
        
        int begin = 0;
        int rowend = n-1;
        int colend = n-1;
        int val =1;
        
        while (begin <= rowend &&  begin <= colend )
        {
            for(int j = begin ;j <= colend; j++)
            {
                m[begin][j] = val++;
                
                
                
            }
            
            for (int i = begin+1; i <= rowend; i++ )
            {
                m[i][colend] = val ++;
            
                
            }
            
            if(begin < rowend)  //遍历最后一行
            {
                for (int j = colend-1 ;j >=begin ; j--)
                
                {
                   m[rowend][j] = val ++;
                    
                }
                
             
                
            }
            
            if(begin < colend)  //遍历最左列
            {
                for (int i = rowend-1 ;i >=begin+1 ; i--)
                
                {
                   m[i][begin] = val ++;
                    
                }
                
             
                
            }
            
            
            begin++;
            
            rowend--;
            colend--;
            
            
            
        }
        
        return m;
        
    }
};
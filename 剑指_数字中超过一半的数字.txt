1.hash : 	O(N),O(N);
class Solution {
public:
    int MoreThanHalfNum_Solution(vector<int> numbers) {
        unordered_map<int,int> dic;
        int n = numbers.size();
        int k = n /2;
        for(int num: numbers){
            dic[num]++;
            if (dic[num]>k) return num;
  
        }
        return 0;
    }
};



2. 消除法， 这个数出现的次数比其他所有数出现的次数都多；


class Solution {
public:
    int MoreThanHalfNum_Solution(vector<int> numbers) {
        int times = 0,res = 0;
        for(int i = 0; i < numbers.size() ; i++){
            if(times == 0){
                res=numbers[i];
                times++;
                
                }
            else if(res == numbers[i]) times++;
            else times--;
            
     
        }
        
        times=0;
        for(int i = 0; i < numbers.size() ; i++){
            if (res == numbers[i]) times++;
            if (times>numbers.size()/2) return res;
            
        }
        
        return 0;
        
        
        
    
    }
};
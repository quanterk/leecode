/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode(int x) : val(x), left(NULL), right(NULL) {}
 * };
 */
class Solution {
public:
     vector<int>  rightSideView(TreeNode* root) {
       vector<int> res;
        if(root == nullptr) return res;

        

        queue<TreeNode*> q;

        q.push(root);

        int c = 0;

        while(!q.empty()){
            vector<int> level;
            int n = q.size();
            for (int i = 0; i < n; i++){
                if (i==0){
                TreeNode* node = q.back();
                res.push_back(node -> val);

                }
                TreeNode* node2 = q.front();

                q.pop();
                if(node2 -> left) q.push(node2 -> left);
                if(node2-> right) q.push(node2 -> right);

            }

        
   







        }
        return res;
        
    }
};
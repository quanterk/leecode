1.O(n),	O(N);

class Solution {
public:
    vector<int> intersection(vector<int>& nums1, vector<int>& nums2) {
        
        if (nums1.empty() || nums2.empty()) return {};
        
        unordered_set<int> set(nums1.begin(),nums1.end());
        
        vector<int> result;
        
        for (int num :nums2){
            
            if (set.count(num)>0){
                
                result.push_back(num);
                
                set.erase(num);
                

            }

            
        }
        
        return result;
        
        
        
    }
};






2. O£¨nlogn£© O£¨1£©£»
class Solution {
public:
    vector<int> intersection(vector<int>& nums1, vector<int>& nums2) {
        
        if (nums1.empty() || nums2.empty()) return {};
        vector<int> result ;
        int i = 0 , j = 0;
        sort(nums1.begin(),nums1.end());
        sort(nums2.begin(),nums2.end());
       
        
        while ( i <nums1.size() && j <nums2.size()){
           
                
                if (nums1[i] < nums2[j]) i++;
                else if (nums1[i] > nums2[j]) j++ ;
                else{
                    if (result.empty() || result.back() != nums1[i]){ 
                        result.push_back(nums1[i]);   
                    }
                    
                    i++;
                    j++;
    
                }
                
                
            }
            
            
            
        
        
           
         return   result;      
                
    }
            
       

};






